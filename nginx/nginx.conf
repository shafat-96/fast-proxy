user  nginx;
worker_processes  auto;
worker_rlimit_nofile 200000;

events {
    worker_connections  65536;
    multi_accept on;
    use epoll;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout  65s;
    keepalive_requests 10000;

    access_log  /var/log/nginx/access.log;
    server_tokens off;

    # Upstream pool (4 app containers)
    upstream backend {
        least_conn;
        keepalive 256;
        server server-1:3000 max_fails=3 fail_timeout=10s;
        server server-2:3000 max_fails=3 fail_timeout=10s;
        server server-3:3000 max_fails=3 fail_timeout=10s;
        server server-4:3000 max_fails=3 fail_timeout=10s;
    }

    # Tune buffers for many concurrent segment downloads
    proxy_buffering on;              # For VOD throughput; set to off for lowest latency live
    proxy_buffers 128 16k;
    proxy_busy_buffers_size 256k;
    proxy_buffer_size 32k;
    proxy_request_buffering off;     # Start proxying requests immediately
    proxy_http_version 1.1;

    # Timeouts suitable for segment delivery
    proxy_connect_timeout 5s;
    proxy_send_timeout 90s;
    proxy_read_timeout 90s;
    send_timeout 90s;

    # Main HTTP server (port 80)
    server {
        listen 80 default_server reuseport;
        listen [::]:80 default_server reuseport;

        server_name _;

        # Simple health
        location = /nginx-health { return 200 'ok'; }

        # Proxy everything to backend
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";

            proxy_next_upstream error timeout http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 15s;

            proxy_pass http://backend;
        }
    }
}