user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  10240;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # DNS resolver for Docker internal DNS
    resolver 127.0.0.11 valid=10s ipv6=off;
    resolver_timeout 5s;

    # Logging
    access_log  /var/log/nginx/access.log  main;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Performance tuning
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65s;
    keepalive_requests 1000;
    types_hash_max_size 4096;

    # Compression
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # Upstream to Node replicas discovered via DNSRR
    upstream backend {
        zone backend 64k;
        least_conn;
        keepalive 64;
        # Docker service name + port; DNSRR exposes multiple A records
        server server:3000 resolve max_fails=3 fail_timeout=10s;
    }

    # Map real IP headers (if behind another proxy in the future)
    map $http_x_forwarded_proto $proxy_x_proto {
        default $http_x_forwarded_proto;
        ''      $scheme;
    }

    # HTTP server: serve ACME challenge and redirect to HTTPS
    server {
        listen 80 default_server reuseport;
        listen [::]:80 default_server reuseport;

        server_name proxy.vidnest.fun;
        client_max_body_size 50m;

        # Health endpoint served by Nginx itself
        location = /nginx-health {
            add_header Content-Type text/plain;
            return 200 'ok';
        }

        # Letâ€™s Encrypt HTTP-01 challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect everything else to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server: proxy to backend
    server {
        listen 443 ssl http2 reuseport;
        listen [::]:443 ssl http2 reuseport;
        server_name proxy.vidnest.fun;

        ssl_certificate /etc/letsencrypt/live/proxy.vidnest.fun/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/proxy.vidnest.fun/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256';
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        client_max_body_size 50m;

        location /nginx-health {
            add_header Content-Type text/plain;
            return 200 'ok';
        }

        location / {
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $proxy_x_proto;
            proxy_set_header Connection "";

            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            send_timeout 60s;

            proxy_buffering on;
            proxy_buffers 64 8k;
            proxy_busy_buffers_size 128k;
            proxy_buffer_size 16k;

            proxy_next_upstream error timeout http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 15s;

            proxy_pass http://backend;
        }
    }
}
